[tox]
min_version = 4.0.19
env_list =
	3.11
	unittests
	doctests
	static_type_analysis
	static_type_analysis__testcode
	code_style_checker
	docstring_style_checker
	full_linter
# Suppressing to create the sdists for creating a "distribution package" or installing it:
skipsdist = True
skip_install = True

[testenv]
# config for global TOX test-environment
pass_env =
# passing through environment variable in order to avoid false-positive linter-errors in mypy not recognizing sys.path.append() during import-discovery:
	MYPYPATH
# passing through environment variable in order to avoid errors in pylint and unit tests during import-discovery:
	PYTHONPATH
allowlist_externals =
	/usr/local/bin/mypy
	/usr/local/bin/flake8
	/usr/local/bin/pydocstyle
	/usr/local/bin/pylint

[testenv:unittests]
# deps = pytest
# run unit tests
commands = python3 -Walways -m unittest discover -v -s tests

[testenv:doctests]
commands =
	python3 -Walways -m doctest src/sidlogism/python_toolbox/misc_common_tools.py
	python3 -Walways -m doctest src/sidlogism/python_toolbox/logging_tools.py
	python3 -Walways -m doctest src/sidlogism/python_toolbox/subprocess_tools.py

[testenv:static_type_analysis]
# The following "deps"-line will try to download mypy via pip, but on OpenBSD mypy is installed via OS-package (via pkg_add) instead of via pip:
# deps = mypy
commands = mypy --check-untyped-defs --namespace-packages --explicit-package-bases src
# --check-untyped-defs required for enforcing type checking of __init__-ctor functions of classes which cannot be given a return type annotation. This also avoids the skipping of function body's whose function signature was not yet type-annotated.
# --namespace-packages required for import-discovery in order to avoid false-positive linter-errors not recognizing empty "namespace packages" (see README)
# --explicit-package-bases required for import-discovery in order to avoid false-positive linter-errors not recognizing sys.path.append() during import-discovery

[testenv:static_type_analysis__testcode]
commands = mypy --check-untyped-defs --namespace-packages --explicit-package-bases tests
# see above comment of static_type_analysis

[testenv:code_style_checker]
commands = flake8 --config=tox.ini src tests

[testenv:docstring_style_checker]
commands = pydocstyle --source --config=tox.ini src tests

[testenv:full_linter]
commands = pylint --rcfile pylint_config.toml src tests

# [testenv:spellcheck_readme]
# commands = cat README.md | aspell -d en_US list --personal=./custom_wordlist_for_aspell.en.pws
# TODO not working. Use this manual command instead: "aspell -d en_US check README.md --personal=./custom_wordlist_for_aspell.en.pws"

[flake8]
# flake8 configuration for this project
show-source = True
# avoiding error: E123 closing bracket does not match indentation of opening bracket's line
hang-closing = True 
max-line-length = 150
# Overriding default configuration by using "ignore" instead of "extend-ignore".
# => thereby re-adding missing error codes, which are excluded in the default configuration.
ignore =
# W191: indentation contains tabs
	W191
# E128 continuation line under-indented for visual indent (see https://www.flake8rules.com/rules/E128.html)
	E128

[pydocstyle]
# re-adding missing error codes, which are excluded in the default configuration.
add_select =
# Forcing summary line to be placed on the second line for readability by omitting D212 (forcing summary line on first line) and adding D213:
# D213: Multi-line docstring summary should start at the second line (PEP 257 allows both)
	D213,
# D404:	First word of the docstring should not be This
	D404


